From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: TomateDeveloper <ianfe@martina.com.co>
Date: Fri, 11 Nov 2022 19:50:46 -0500
Subject: [PATCH] Add injection ecosystem


diff --git a/src/main/java/org/bukkit/craftbukkit/CraftModule.java b/src/main/java/org/bukkit/craftbukkit/CraftModule.java
new file mode 100644
index 0000000000000000000000000000000000000000..f2cbece579e6531c3512de06a887801b23289972
--- /dev/null
+++ b/src/main/java/org/bukkit/craftbukkit/CraftModule.java
@@ -0,0 +1,43 @@
+package org.bukkit.craftbukkit;
+        
+import com.google.inject.AbstractModule;
+import com.google.inject.multibindings.OptionalBinder;
+import games.pixeljam.inject.ProtectedBinder;
+import org.bukkit.Server;
+import org.bukkit.craftbukkit.scheduler.CraftScheduler;
+import org.bukkit.plugin.Plugin;
+import org.bukkit.plugin.PluginManager;
+import org.bukkit.plugin.PluginModule;
+import org.bukkit.plugin.ServicesManager;
+import org.bukkit.scheduler.BukkitScheduler;
+
+public class CraftModule extends AbstractModule {
+
+    private final CraftServer server;
+    private final PluginManager pluginManager;
+    private final CraftScheduler scheduler;
+    private final ServicesManager servicesManager;
+    private final Plugin[] plugins;
+
+    public CraftModule(CraftServer server, PluginManager pluginManager, CraftScheduler scheduler, ServicesManager servicesManager, Plugin[] plugins) {
+        this.server = server;
+        this.pluginManager = pluginManager;
+        this.scheduler = scheduler;
+        this.servicesManager = servicesManager;
+        this.plugins = plugins;
+    }
+
+    @Override
+    protected void configure() {
+        OptionalBinder.newOptionalBinder(binder(), Server.class).setBinding().toInstance(server);
+        OptionalBinder.newOptionalBinder(binder(), PluginManager.class).setBinding().toInstance(pluginManager);
+        OptionalBinder.newOptionalBinder(binder(), BukkitScheduler.class).setBinding().toInstance(scheduler);
+        OptionalBinder.newOptionalBinder(binder(), ServicesManager.class).setBinding().toInstance(servicesManager);
+
+        for (Plugin plugin : plugins) {
+            ProtectedBinder.newProtectedBinder(binder()).install(new PluginModule(plugin));
+        }
+        
+    }
+
+}
\ No newline at end of file
diff --git a/src/main/java/org/bukkit/craftbukkit/CraftServer.java b/src/main/java/org/bukkit/craftbukkit/CraftServer.java
index c89c4b5eaafeed86c63641183ca831db979b00c7..86bb7324aeca5e0385a5c9c0b80568ad0656281c 100644
--- a/src/main/java/org/bukkit/craftbukkit/CraftServer.java
+++ b/src/main/java/org/bukkit/craftbukkit/CraftServer.java
@@ -8,6 +8,9 @@ import com.google.common.collect.Iterators;
 import com.google.common.collect.Lists;
 import com.google.common.collect.MapMaker;
 import com.google.gson.JsonObject;
+import com.google.inject.Guice;
+import com.google.inject.Injector;
+import com.google.inject.Stage;
 import com.mojang.authlib.GameProfile;
 import com.mojang.brigadier.StringReader;
 import com.mojang.brigadier.exceptions.CommandSyntaxException;
@@ -301,6 +304,8 @@ public final class CraftServer implements Server {
     private final io.papermc.paper.logging.SysoutCatcher sysoutCatcher = new io.papermc.paper.logging.SysoutCatcher(); // Paper
     private final CraftPotionBrewer potionBrewer = new CraftPotionBrewer(); // Paper
 
+    private Injector injector;
+
     static {
         ConfigurationSerialization.registerClass(CraftOfflinePlayer.class);
         ConfigurationSerialization.registerClass(CraftPlayerProfile.class);
@@ -487,6 +492,8 @@ public final class CraftServer implements Server {
             Plugin[] plugins = this.pluginManager.loadPlugins(pluginFolder, extraJars);
             // Purpur end
             // Paper end
+            // Sinfonia - added injector
+            injector = Guice.createInjector(Stage.PRODUCTION, new ServerModule(), new CraftModule(this, getPluginManager(), getScheduler(), getServicesManager(), plugins));
             for (Plugin plugin : plugins) {
                 try {
                     String message = String.format("Loading %s", plugin.getDescription().getFullName());
diff --git a/src/main/java/org/bukkit/craftbukkit/ServerModule.java b/src/main/java/org/bukkit/craftbukkit/ServerModule.java
new file mode 100644
index 0000000000000000000000000000000000000000..a89a8de121d321c8c79bc269bf7a8244f8d4bd43
--- /dev/null
+++ b/src/main/java/org/bukkit/craftbukkit/ServerModule.java
@@ -0,0 +1,20 @@
+package org.bukkit.craftbukkit;
+
+import com.google.inject.AbstractModule;
+import com.google.inject.multibindings.OptionalBinder;
+import org.bukkit.Server;
+import org.bukkit.plugin.PluginManager;
+import org.bukkit.plugin.ServicesManager;
+import org.bukkit.scheduler.BukkitScheduler;
+
+public class ServerModule extends AbstractModule {
+
+    @Override
+    protected void configure() {
+        OptionalBinder.newOptionalBinder(binder(), Server.class);
+        OptionalBinder.newOptionalBinder(binder(), PluginManager.class);
+        OptionalBinder.newOptionalBinder(binder(), BukkitScheduler.class);
+        OptionalBinder.newOptionalBinder(binder(), ServicesManager.class);
+    }
+
+}
\ No newline at end of file
