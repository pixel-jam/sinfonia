From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: TomateDeveloper <ianfe@martina.com.co>
Date: Fri, 11 Nov 2022 20:03:29 -0500
Subject: [PATCH] Added find player by ID property


diff --git a/src/main/java/net/minecraft/server/level/ServerPlayer.java b/src/main/java/net/minecraft/server/level/ServerPlayer.java
index d62bf95fb067c2e2a4fc9b2757c636bd4ee75bea..80286c84003437779a51d077f0f92783cd0b2abf 100644
--- a/src/main/java/net/minecraft/server/level/ServerPlayer.java
+++ b/src/main/java/net/minecraft/server/level/ServerPlayer.java
@@ -273,6 +273,7 @@ public class ServerPlayer extends Player {
     private boolean ramBar = false; // Purpur
     private boolean tpsBar = false; // Purpur
     private boolean compassBar = false; // Purpur
+    private String databaseIdentifier; // Sinfonia
 
     public ServerPlayer(MinecraftServer server, ServerLevel world, GameProfile profile) {
         super(world, world.getSharedSpawnPos(), world.getSharedSpawnAngle(), profile);
@@ -375,6 +376,16 @@ public class ServerPlayer extends Player {
         this.spawnInvulnerableTime = world.purpurConfig.playerSpawnInvulnerableTicks; // Purpur
     }
 
+    // Sinfonia start - Get by database identifier
+    public String getDatabaseIdentifier() {
+        return this.databaseIdentifier;
+    }
+
+    // Sinfonia start - Get by database identifier
+    public void setDatabaseIdentifier(String databaseIdentifier) {
+        this.databaseIdentifier = databaseIdentifier;
+    }
+
     // Yes, this doesn't match Vanilla, but it's the best we can do for now.
     // If this is an issue, PRs are welcome
     public final BlockPos getSpawnPoint(ServerLevel worldserver) {
@@ -485,6 +496,13 @@ public class ServerPlayer extends Player {
         if (nbt.contains("recipeBook", 10)) {
             this.recipeBook.fromNbt(nbt.getCompound("recipeBook"), this.server.getRecipeManager());
         }
+
+        // Sinfonia start - Set database identifier
+        if (nbt.contains("databaseIdentifier")) {
+            this.databaseIdentifier = nbt.getString("databaseIdentifier");
+        }
+        // Sinfonia end
+
         this.getBukkitEntity().readExtraData(nbt); // CraftBukkit
 
         if (this.isSleeping()) {
@@ -515,6 +533,7 @@ public class ServerPlayer extends Player {
         if (nbt.contains("Purpur.RamBar")) { this.ramBar = nbt.getBoolean("Purpur.RamBar"); } // Purpur
         if (nbt.contains("Purpur.TPSBar")) { this.tpsBar = nbt.getBoolean("Purpur.TPSBar"); } // Purpur
         if (nbt.contains("Purpur.CompassBar")) { this.compassBar = nbt.getBoolean("Purpur.CompassBar"); } // Purpur
+        nbt.putString("databaseIdentifier", this.databaseIdentifier);
     }
 
     @Override
diff --git a/src/main/java/net/minecraft/server/players/PlayerList.java b/src/main/java/net/minecraft/server/players/PlayerList.java
index c34c5368e336ba4b181a95932a9b40cb4f50ae1d..2c30e3de35c4da4b9b3ad677cbb8cd0db768e6b1 100644
--- a/src/main/java/net/minecraft/server/players/PlayerList.java
+++ b/src/main/java/net/minecraft/server/players/PlayerList.java
@@ -301,7 +301,14 @@ public abstract class PlayerList {
         this.players.add(player);
         this.playersByName.put(player.getScoreboardName().toLowerCase(java.util.Locale.ROOT), player); // Spigot
         this.playersByUUID.put(player.getUUID(), player);
-        // this.broadcastAll(ClientboundPlayerInfoUpdatePacket.createPlayerInitializing(List.of(entityplayer))); // CraftBukkit - replaced with loop below
+
+        this.playersByIdentifier.put("", player); // Sinfonia - Find by database identifier
+        String oldIdentifier = player.getDatabaseIdentifier();
+        if (oldIdentifier != null && !oldIdentifier.isEmpty())  {
+            this.playersByIdentifier.put(oldIdentifier, player);
+        }
+
+        // this.broadcastAll(new PacketPlayOutPlayerInfo(PacketPlayOutPlayerInfo.EnumPlayerInfoAction.ADD_PLAYER, new EntityPlayer[]{entityplayer})); // CraftBukkit - replaced with loop below
 
         // Paper start - correctly register player BEFORE PlayerJoinEvent, so the entity is valid and doesn't require tick delay hacks
         player.supressTrackerForLogin = true;
@@ -318,6 +325,9 @@ public abstract class PlayerList {
         PlayerJoinEvent playerJoinEvent = new PlayerJoinEvent(bukkitPlayer, PaperAdventure.asAdventure(ichatmutablecomponent)); // Paper - Adventure
         this.cserver.getPluginManager().callEvent(playerJoinEvent);
 
+        playersByIdentifier.remove(oldIdentifier);
+        playersByIdentifier.put(player.getDatabaseIdentifier(), player);
+
         if (!player.connection.connection.isConnected()) {
             return;
         }
@@ -633,6 +643,10 @@ public abstract class PlayerList {
         ServerPlayer entityplayer1 = (ServerPlayer) this.playersByUUID.get(uuid);
 
         if (entityplayer1 == entityplayer) {
+            String dbId = entityplayer.getDatabaseIdentifier();
+            if (dbId != null) {
+                this.playersByIdentifier.remove(dbId);
+            }
             this.playersByUUID.remove(uuid);
             // CraftBukkit start
             // this.stats.remove(uuid);
@@ -1537,6 +1551,11 @@ public abstract class PlayerList {
         return (ServerPlayer) this.playersByUUID.get(uuid);
     }
 
+    @Nullable
+    public ServerPlayer getPlayerByIdentifier(String id) {
+        return this.playersByIdentifier.get(id);
+    }
+
     public boolean canBypassPlayerLimit(GameProfile profile) {
         return false;
     }
diff --git a/src/main/java/org/bukkit/craftbukkit/CraftServer.java b/src/main/java/org/bukkit/craftbukkit/CraftServer.java
index 86bb7324aeca5e0385a5c9c0b80568ad0656281c..93b481b0bd9dd533e113349cef8e57c1cae8ae02 100644
--- a/src/main/java/org/bukkit/craftbukkit/CraftServer.java
+++ b/src/main/java/org/bukkit/craftbukkit/CraftServer.java
@@ -407,6 +407,14 @@ public final class CraftServer implements Server {
         datapackManager = new io.papermc.paper.datapack.PaperDatapackManager(console.getPackRepository()); // Paper
     }
 
+    // Sinfonia start - Get player by identifier
+    @Override
+    public Player getPlayerByIdentifier(String id) {
+        Validate.notNull(id, "Identifier cannot be null");
+        ServerPlayer player = playerList.getPlayerByIdentifier(id);
+        return (player != null) ? player.getBukkitEntity() : null;
+    }
+
     public boolean getCommandBlockOverride(String command) {
         return this.overrideAllCommandBlockCommands || this.commandsConfiguration.getStringList("command-block-overrides").contains(command);
     }
diff --git a/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java b/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java
index 5a76c967e2d9c9c1b09e8de33fcde34e25b4646b..9f6c5d616e5c3920123f370ca66c6f4b9292c4f0 100644
--- a/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java
+++ b/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java
@@ -3097,6 +3097,18 @@ public class CraftPlayer extends CraftHumanEntity implements Player {
         getHandle().spawnInvulnerableTime = spawnInvulnerableTime;
     }
 
+    // Sinfonia start - Get player by Identifier
+    @Override
+    public String getPlayerIdentifier() {
+        return this.getHandle().getDatabaseIdentifier();
+    }
+
+    @Override
+    public void setDatabaseIdentifier(String identifier) {
+        this.getHandle().setDatabaseIdentifier(identifier);
+    }
+    // Sinfonia end
+
     @Override
     public void sendBlockHighlight(Location location, int duration) {
         sendBlockHighlight(location, duration, "", 0x6400FF00);
