From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: TomateDeveloper <ianfe@martina.com.co>
Date: Fri, 11 Nov 2022 20:03:29 -0500
Subject: [PATCH] Added find player by ID property


diff --git a/src/main/java/net/minecraft/server/level/ServerPlayer.java b/src/main/java/net/minecraft/server/level/ServerPlayer.java
index 7f2a811505c2aeaad6e1a91a0719613a6694f77a..4b6a262297161aa099d229a5657a322e45968144 100644
--- a/src/main/java/net/minecraft/server/level/ServerPlayer.java
+++ b/src/main/java/net/minecraft/server/level/ServerPlayer.java
@@ -275,6 +275,7 @@ public class ServerPlayer extends Player {
     private boolean ramBar = false; // Purpur
     private boolean tpsBar = false; // Purpur
     private boolean compassBar = false; // Purpur
+    private String databaseIdentifier; // Sinfonia
 
     public ServerPlayer(MinecraftServer server, ServerLevel world, GameProfile profile) {
         super(world, world.getSharedSpawnPos(), world.getSharedSpawnAngle(), profile);
@@ -377,6 +378,16 @@ public class ServerPlayer extends Player {
         this.spawnInvulnerableTime = world.purpurConfig.playerSpawnInvulnerableTicks; // Purpur
     }
 
+    // Sinfonia start - Get by database identifier
+    public String getDatabaseIdentifier() {
+        return this.databaseIdentifier;
+    }
+
+    // Sinfonia start - Get by database identifier
+    public void setDatabaseIdentifier(String databaseIdentifier) {
+        this.databaseIdentifier = databaseIdentifier;
+    }
+
     // Yes, this doesn't match Vanilla, but it's the best we can do for now.
     // If this is an issue, PRs are welcome
     public final BlockPos getSpawnPoint(ServerLevel worldserver) {
@@ -487,6 +498,13 @@ public class ServerPlayer extends Player {
         if (nbt.contains("recipeBook", 10)) {
             this.recipeBook.fromNbt(nbt.getCompound("recipeBook"), this.server.getRecipeManager());
         }
+
+        // Sinfonia start - Set database identifier
+        if (nbt.contains("databaseIdentifier")) {
+            this.databaseIdentifier = nbt.getString("databaseIdentifier");
+        }
+        // Sinfonia end
+
         this.getBukkitEntity().readExtraData(nbt); // CraftBukkit
 
         if (this.isSleeping()) {
@@ -517,6 +535,7 @@ public class ServerPlayer extends Player {
         if (nbt.contains("Purpur.RamBar")) { this.ramBar = nbt.getBoolean("Purpur.RamBar"); } // Purpur
         if (nbt.contains("Purpur.TPSBar")) { this.tpsBar = nbt.getBoolean("Purpur.TPSBar"); } // Purpur
         if (nbt.contains("Purpur.CompassBar")) { this.compassBar = nbt.getBoolean("Purpur.CompassBar"); } // Purpur
+        nbt.putString("databaseIdentifier", this.databaseIdentifier);
     }
 
     @Override
diff --git a/src/main/java/net/minecraft/server/players/PlayerList.java b/src/main/java/net/minecraft/server/players/PlayerList.java
index 9cfe4f2ab57f6d17a64eda2c48fb59ab7aa14367..138da3c0f23f42ac09b4f1e7d52a8d661097e840 100644
--- a/src/main/java/net/minecraft/server/players/PlayerList.java
+++ b/src/main/java/net/minecraft/server/players/PlayerList.java
@@ -363,7 +363,14 @@ public abstract class PlayerList {
         this.players.add(player);
         this.playersByName.put(player.getScoreboardName().toLowerCase(java.util.Locale.ROOT), player); // Spigot
         this.playersByUUID.put(player.getUUID(), player);
-        // this.broadcastAll(ClientboundPlayerInfoUpdatePacket.createPlayerInitializing(List.of(entityplayer))); // CraftBukkit - replaced with loop below
+
+        this.playersByIdentifier.put("", player); // Sinfonia - Find by database identifier
+        String oldIdentifier = player.getDatabaseIdentifier();
+        if (oldIdentifier != null && !oldIdentifier.isEmpty())  {
+            this.playersByIdentifier.put(oldIdentifier, player);
+        }
+
+        // this.broadcastAll(new PacketPlayOutPlayerInfo(PacketPlayOutPlayerInfo.EnumPlayerInfoAction.ADD_PLAYER, new EntityPlayer[]{entityplayer})); // CraftBukkit - replaced with loop below
 
         // Paper start - correctly register player BEFORE PlayerJoinEvent, so the entity is valid and doesn't require tick delay hacks
         player.supressTrackerForLogin = true;
@@ -380,6 +387,9 @@ public abstract class PlayerList {
         PlayerJoinEvent playerJoinEvent = new PlayerJoinEvent(bukkitPlayer, PaperAdventure.asAdventure(ichatmutablecomponent)); // Paper - Adventure
         this.cserver.getPluginManager().callEvent(playerJoinEvent);
 
+        playersByIdentifier.remove(oldIdentifier);
+        playersByIdentifier.put(player.getDatabaseIdentifier(), player);
+
         if (!player.connection.connection.isConnected()) {
             return;
         }
@@ -690,6 +700,10 @@ public abstract class PlayerList {
         ServerPlayer entityplayer1 = (ServerPlayer) this.playersByUUID.get(uuid);
 
         if (entityplayer1 == entityplayer) {
+            String dbId = entityplayer.getDatabaseIdentifier();
+            if (dbId != null) {
+                this.playersByIdentifier.remove(dbId);
+            }
             this.playersByUUID.remove(uuid);
             // CraftBukkit start
             // this.stats.remove(uuid);
@@ -1598,6 +1612,11 @@ public abstract class PlayerList {
         return (ServerPlayer) this.playersByUUID.get(uuid);
     }
 
+    @Nullable
+    public ServerPlayer getPlayerByIdentifier(String id) {
+        return this.playersByIdentifier.get(id);
+    }
+
     public boolean canBypassPlayerLimit(GameProfile profile) {
         return false;
     }
diff --git a/src/main/java/org/bukkit/craftbukkit/CraftServer.java b/src/main/java/org/bukkit/craftbukkit/CraftServer.java
index d15209ba6fb4ab4b460eea038041bd84b116d320..340a413fcddc01ee6ad8e56a6124ece53140535f 100644
--- a/src/main/java/org/bukkit/craftbukkit/CraftServer.java
+++ b/src/main/java/org/bukkit/craftbukkit/CraftServer.java
@@ -407,6 +407,14 @@ public final class CraftServer implements Server {
         datapackManager = new io.papermc.paper.datapack.PaperDatapackManager(console.getPackRepository()); // Paper
     }
 
+    // Sinfonia start - Get player by identifier
+    @Override
+    public Player getPlayerByIdentifier(String id) {
+        Validate.notNull(id, "Identifier cannot be null");
+        ServerPlayer player = playerList.getPlayerByIdentifier(id);
+        return (player != null) ? player.getBukkitEntity() : null;
+    }
+
     public boolean getCommandBlockOverride(String command) {
         return this.overrideAllCommandBlockCommands || this.commandsConfiguration.getStringList("command-block-overrides").contains(command);
     }
diff --git a/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java b/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java
index 82697576db752e3dad908e389035ec66c728f0ec..43d294983f7794e88eac4b5a14b938b1fdf14f52 100644
--- a/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java
+++ b/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java
@@ -3082,6 +3082,18 @@ public class CraftPlayer extends CraftHumanEntity implements Player {
         return getHandle().flyingFallDamage;
     }
 
+    // Sinfonia start - Get player by Identifier
+    @Override
+    public String getPlayerIdentifier() {
+        return this.getHandle().getDatabaseIdentifier();
+    }
+
+    @Override
+    public void setDatabaseIdentifier(String identifier) {
+        this.getHandle().setDatabaseIdentifier(identifier);
+    }
+    // Sinfonia end
+
     @Override
     public void sendBlockHighlight(Location location, int duration) {
         sendBlockHighlight(location, duration, "", 0x6400FF00);
