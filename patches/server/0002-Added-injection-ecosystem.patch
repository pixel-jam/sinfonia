From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Ian=20Casta=C3=B1o?= <ianfe@martina.com.co>
Date: Mon, 13 Jun 2022 22:49:53 -0500
Subject: [PATCH] Added injection ecosystem


diff --git a/src/main/java/org/bukkit/craftbukkit/CraftModule.java b/src/main/java/org/bukkit/craftbukkit/CraftModule.java
new file mode 100644
index 0000000000000000000000000000000000000000..07779bdb75324e1c681b9a6eb056fa8002ace0cb
--- /dev/null
+++ b/src/main/java/org/bukkit/craftbukkit/CraftModule.java
@@ -0,0 +1,45 @@
+package org.bukkit.craftbukkit;
+
+import com.google.inject.AbstractModule;
+import com.google.inject.multibindings.OptionalBinder;
+import games.pixeljam.inject.ProtectedBinder;
+import org.bukkit.Server;
+import org.bukkit.craftbukkit.scheduler.CraftScheduler;
+import org.bukkit.plugin.Plugin;
+import org.bukkit.plugin.PluginManager;
+import org.bukkit.plugin.PluginModule;
+import org.bukkit.plugin.ServicesManager;
+import org.bukkit.scheduler.BukkitScheduler;
+
+public class CraftModule extends AbstractModule {
+
+    private final CraftServer server;
+    private final PluginManager pluginManager;
+    private final CraftScheduler scheduler;
+    private final ServicesManager servicesManager;
+    private final Plugin[] plugins;
+
+    public CraftModule(CraftServer server, PluginManager pluginManager, CraftScheduler scheduler, ServicesManager servicesManager, Plugin[] plugins) {
+        this.server = server;
+        this.pluginManager = pluginManager;
+        this.scheduler = scheduler;
+        this.servicesManager = servicesManager;
+        this.plugins = plugins;
+
+    }
+
+    @Override
+    protected void configure() {
+
+        OptionalBinder.newOptionalBinder(binder(), Server.class).setBinding().toInstance(server);
+        OptionalBinder.newOptionalBinder(binder(), PluginManager.class).setBinding().toInstance(pluginManager);
+        OptionalBinder.newOptionalBinder(binder(), BukkitScheduler.class).setBinding().toInstance(scheduler);
+        OptionalBinder.newOptionalBinder(binder(), ServicesManager.class).setBinding().toInstance(servicesManager);
+
+        for (Plugin plugin : plugins) {
+            ProtectedBinder.newProtectedBinder(binder()).install(new PluginModule(plugin));
+        }
+
+    }
+
+}
diff --git a/src/main/java/org/bukkit/craftbukkit/CraftServer.java b/src/main/java/org/bukkit/craftbukkit/CraftServer.java
index 8f331e230776c0a818056a49e9b85e803f6f05df..936ce98bc7edeb06a310f34c02d2e8485d5558ef 100644
--- a/src/main/java/org/bukkit/craftbukkit/CraftServer.java
+++ b/src/main/java/org/bukkit/craftbukkit/CraftServer.java
@@ -7,6 +7,9 @@ import com.google.common.collect.ImmutableList;
 import com.google.common.collect.Iterators;
 import com.google.common.collect.Lists;
 import com.google.common.collect.MapMaker;
+import com.google.inject.Guice;
+import com.google.inject.Injector;
+import com.google.inject.Stage;
 import com.mojang.authlib.GameProfile;
 import com.mojang.brigadier.StringReader;
 import com.mojang.brigadier.exceptions.CommandSyntaxException;
@@ -283,6 +286,8 @@ public final class CraftServer implements Server {
     private final io.papermc.paper.logging.SysoutCatcher sysoutCatcher = new io.papermc.paper.logging.SysoutCatcher(); // Paper
     private final CraftPotionBrewer potionBrewer = new CraftPotionBrewer(); // Paper
 
+    private Injector injector;
+
     static {
         ConfigurationSerialization.registerClass(CraftOfflinePlayer.class);
         ConfigurationSerialization.registerClass(CraftPlayerProfile.class);
@@ -417,6 +422,8 @@ public final class CraftServer implements Server {
                 pluginFolder.mkdirs();
             }
             Plugin[] plugins = this.pluginManager.loadPlugins(pluginFolder, this.extraPluginJars());
+            // Sinfonia - added injector
+            injector = Guice.createInjector(Stage.PRODUCTION, new ServerModule(), new CraftModule(this, getPluginManager(), getScheduler(), getServicesManager(), plugins));
             // Paper end
             for (Plugin plugin : plugins) {
                 try {
diff --git a/src/main/java/org/bukkit/craftbukkit/ServerModule.java b/src/main/java/org/bukkit/craftbukkit/ServerModule.java
new file mode 100644
index 0000000000000000000000000000000000000000..b2d7d3af31afe63f9ba0f950603fe70b5bfac2dd
--- /dev/null
+++ b/src/main/java/org/bukkit/craftbukkit/ServerModule.java
@@ -0,0 +1,20 @@
+package org.bukkit.craftbukkit;
+
+import com.google.inject.AbstractModule;
+import com.google.inject.multibindings.OptionalBinder;
+import org.bukkit.Server;
+import org.bukkit.plugin.PluginManager;
+import org.bukkit.plugin.ServicesManager;
+import org.bukkit.scheduler.BukkitScheduler;
+
+public class ServerModule extends AbstractModule {
+
+    @Override
+    protected void configure() {
+        OptionalBinder.newOptionalBinder(binder(), Server.class);
+        OptionalBinder.newOptionalBinder(binder(), PluginManager.class);
+        OptionalBinder.newOptionalBinder(binder(), BukkitScheduler.class);
+        OptionalBinder.newOptionalBinder(binder(), ServicesManager.class);
+    }
+
+}
