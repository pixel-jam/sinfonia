From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: TomateDeveloper <ianfe@martina.com.co>
Date: Sun, 13 Nov 2022 16:38:45 -0500
Subject: [PATCH] Reformatted player id registry approach to be more flexible


diff --git a/src/main/java/net/minecraft/server/players/PlayerList.java b/src/main/java/net/minecraft/server/players/PlayerList.java
index 0b29588d99731a4d4bd49f0d6dbc326b0006ba5c..9090de7f7952320f33acbc66e5732367d2039f13 100644
--- a/src/main/java/net/minecraft/server/players/PlayerList.java
+++ b/src/main/java/net/minecraft/server/players/PlayerList.java
@@ -355,9 +355,8 @@ public abstract class PlayerList {
         this.players.add(player);
         this.playersByName.put(player.getScoreboardName().toLowerCase(java.util.Locale.ROOT), player); // Spigot
         this.playersByUUID.put(player.getUUID(), player);
-        this.playersByIdentifier.put("", player); // Sinfonia - Find by database identifier
         String oldIdentifier = player.getDatabaseIdentifier();
-        if (oldIdentifier != null && !oldIdentifier.isEmpty())  {
+        if (!oldIdentifier.isEmpty())  {
             this.playersByIdentifier.put(oldIdentifier, player);
         }
 
@@ -378,9 +377,6 @@ public abstract class PlayerList {
         PlayerJoinEvent playerJoinEvent = new PlayerJoinEvent(bukkitPlayer, PaperAdventure.asAdventure(ichatmutablecomponent)); // Paper - Adventure
         this.cserver.getPluginManager().callEvent(playerJoinEvent);
 
-        playersByIdentifier.remove(oldIdentifier);
-        playersByIdentifier.put(player.getDatabaseIdentifier(), player);
-
         if (!player.connection.connection.isConnected()) {
             return;
         }
@@ -450,6 +446,7 @@ public abstract class PlayerList {
         }
         // Paper end
     }
+
     private void mountSavedVehicle(ServerPlayer player, ServerLevel worldserver1, CompoundTag nbttagcompound) {
         // Paper end
         if (nbttagcompound != null && nbttagcompound.contains("RootVehicle", 10)) {
@@ -1626,6 +1623,17 @@ public abstract class PlayerList {
         return this.playersByIdentifier.get(id);
     }
 
+    // Sinfonia - created custom registry for dynamic event provision.
+    public void registerListIdentifier(String id, Player player) {
+        if (player instanceof ServerPlayer) {
+            if (id.equalsIgnoreCase("")) {
+                this.playersByIdentifier.put(id, (ServerPlayer) player);
+            } else {
+                this.playersByIdentifier.remove(id);
+            }
+        }
+    }
+
     public boolean canBypassPlayerLimit(GameProfile profile) {
         return false;
     }
diff --git a/src/main/java/org/bukkit/craftbukkit/CraftServer.java b/src/main/java/org/bukkit/craftbukkit/CraftServer.java
index 9850300d17478faa0fb0862758442a37c5ffcd6a..dfbfd437bee11c15329a0f341f030e5884a0d935 100644
--- a/src/main/java/org/bukkit/craftbukkit/CraftServer.java
+++ b/src/main/java/org/bukkit/craftbukkit/CraftServer.java
@@ -402,6 +402,12 @@ public final class CraftServer implements Server {
         return (player != null) ? player.getBukkitEntity() : null;
     }
 
+    // Sinfonia start
+    @Override
+    public void registerPlayerIdentifier(Player player, String id) {
+        playerList.registerListIdentifier(id, player);
+    }
+
     public boolean getCommandBlockOverride(String command) {
         return this.overrideAllCommandBlockCommands || this.commandsConfiguration.getStringList("command-block-overrides").contains(command);
     }
